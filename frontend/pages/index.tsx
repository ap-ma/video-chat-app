import { addApolloState, initializeApollo } from 'graphql/apollo'
import { InitDocument, useChatHistoryQuery, useMeQuery } from 'graphql/generated'
import { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import React from 'react'

const Index: NextPage = () => {
  // ユーザー情報
  const data1 = useMeQuery({ fetchPolicy: 'cache-first' })
  const data2 = useChatHistoryQuery()

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      こんにちは
    </div>
  )
}

/**
 * SSR時のみ実行され、ページのレンダリングに使用されるpropsを含むオブジェクトを返す
 *
 * SSR時のみAPIアクセスを行うクエリを実行し、キャッシュを作成する
 * 各コンポーネントにてuseQueryを用いて対象となるqueryが実行される場合、
 * SSR, CSR問わずこの関数にて作成されたキャッシュを参照することができる
 * 主にCSRにおいて、頻繁に更新されることのないデータのqueryについてはこちらで実行し、
 * useQueryのFetchPoliciesをcache-firstとすることで不要なAPIアクセスを削減できる
 *
 * @param context
 * @returns
 */
export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const apolloClient = initializeApollo()
  const cookie = ctx.req.headers.cookie
  const context = { headers: { cookie } }

  // const { errors } =
  await apolloClient.query({
    query: InitDocument,
    variables: { limit: 50 },
    errorPolicy: 'all',
    context
  })

  return addApolloState(apolloClient, {
    props: {}
  })
}

export default Index
